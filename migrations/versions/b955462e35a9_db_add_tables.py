"""DB_add_tables

Revision ID: b955462e35a9
Revises: 
Create Date: 2024-05-20 21:31:53.347028

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b955462e35a9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('middlename', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('login', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('iv', sa.String(length=255), nullable=True),
    sa.Column('emailtoken', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('accounturl', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paymentstatuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request_acts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('typesrequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('house', sa.String(length=10), nullable=True),
    sa.Column('office', sa.String(length=10), nullable=True),
    sa.Column('companyid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['companyid'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('middlename', sa.String(length=255), nullable=True),
    sa.Column('initials', sa.String(length=15), nullable=True),
    sa.Column('positionid', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('login', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('iv', sa.String(length=255), nullable=True),
    sa.Column('emailtoken', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['positionid'], ['positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clientaddresses',
    sa.Column('clientid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('addressid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['addressid'], ['addresses.id'], ),
    sa.PrimaryKeyConstraint('clientid', 'addressid')
    )
    op.create_table('notes',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('employeeid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['employeeid'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('requestnumber', sa.Integer(), nullable=True),
    sa.Column('statusid', sa.Integer(), nullable=True),
    sa.Column('paymentstatusid', sa.Integer(), nullable=True),
    sa.Column('employeeid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('clientid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('addressid', sa.Integer(), nullable=True),
    sa.Column('discharged', sa.Text(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('submissiondate', sa.Date(), nullable=True),
    sa.Column('completiondate', sa.Date(), nullable=True),
    sa.Column('estimation', sa.Integer(), nullable=True),
    sa.Column('actid', sa.Integer(), nullable=True),
    sa.Column('revenue', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('expenses', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('profit', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['actid'], ['request_acts.id'], ),
    sa.ForeignKeyConstraint(['addressid'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['clientid'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['employeeid'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['paymentstatusid'], ['paymentstatuses.id'], ),
    sa.ForeignKeyConstraint(['statusid'], ['statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('request_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requeststatushistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requestid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('statusid', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('time', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['requestid'], ['requests.id'], ),
    sa.ForeignKeyConstraint(['statusid'], ['statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('request_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('services')
    op.drop_table('requeststatushistory')
    op.drop_table('expenses')
    op.drop_table('requests')
    op.drop_table('notes')
    op.drop_table('clientaddresses')
    op.drop_table('employees')
    op.drop_table('addresses')
    op.drop_table('typesrequest')
    op.drop_table('statuses')
    op.drop_table('request_acts')
    op.drop_table('positions')
    op.drop_table('paymentstatuses')
    op.drop_table('companies')
    op.drop_table('clients')
    # ### end Alembic commands ###
